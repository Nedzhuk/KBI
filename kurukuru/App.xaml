<Application x:Class="kurukuru.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:kurukuru"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <FontFamily x:Key="Nunito">/Resources/Fonts/#Nunito</FontFamily>

        <Style x:Key="TextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource Nunito}"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>

            <Style x:Key="TextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#f8f8ff"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{StaticResource Nunito}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#888"/>
            <Setter Property="SelectionOpacity" Value="1"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="11"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="11"/>
                                    </Grid.ColumnDefinitions>
                                    <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="False"/>
                                    <TextBlock x:Name="Text" Foreground="#696969" Grid.Column="1" VerticalAlignment="Center" FontFamily="{StaticResource Nunito}" FontSize="16" Text="{TemplateBinding DataContext}"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="#f8f8ff"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#888"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Visibility" TargetName="Text" Value="Collapsed"/>
                                <Setter Property="Background" TargetName="Border" Value="#f8f8ff"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#888"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="False">
                                <Setter Property="Visibility" TargetName="Text" Value="Collapsed"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="Text" Value="Collapsed"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="Text" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Flat ComboBox -->
        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxDisabledForegroundBrush}" 
              CornerRadius="5" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="Black"/>
            <Setter Property="TextElement.FontFamily" Value="{StaticResource Nunito}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- End of Flat ComboBox -->
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#bbbbbb"/>
            <Setter Property="BorderBrush" Value="#a1a1a1"/>
            <Setter Property="FontFamily" Value="{StaticResource Nunito}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="5" Padding="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#878787"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#a1a1a1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListView.ItemContainer" TargetType="{x:Type ListViewItem}">
            <Setter Property="ItemsControl.Background" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
            <Setter Property="ItemsControl.Margin" Value="0,3"/>
            <Setter Property="ItemsControl.Padding" Value="11,8"/>
            <Setter Property="ItemsControl.BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ItemsControl.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Focusable="False" RecognizesAccessKey="True"/>
                            </Border>
                            <Border x:Name="Selector" Background="{DynamicResource Light.FillColor.Accent.Default}" Width="3" HorizontalAlignment="Left" Margin="1,8,0,8" Visibility="Collapsed" CornerRadius="1.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
                                <Setter Property="Visibility" TargetName="Selector" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Secondary}"/>
                                <Setter Property="Visibility" TargetName="Selector" Value="Visible"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Secondary}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Disabled}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Selector" Value="{DynamicResource Light.FillColor.Accent.Default}"/>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Tertiary}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Selector" Value="{DynamicResource Light.FillColor.Accent.Disabled}"/>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Disabled}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBar.Thumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="Border" Background="{DynamicResource Light.FillColor.ControlStrong.Default}" Width="2" Height="{TemplateBinding Height}" CornerRadius="3" SnapsToDevicePixels="True"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.ControlStrong.Default}"/>
                                <Setter Property="Width" TargetName="Border" Value="6"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.ControlStrong.Default}"/>
                                <Setter Property="Width" TargetName="Border" Value="6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Track x:Name="PART_Track" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}" HorizontalAlignment="Center">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBar.Thumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="CanContentScroll" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{x:Null}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanHorizontallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" CanVerticallyScroll="False" Content="{TemplateBinding Content}" CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBar}" AutomationProperties.AutomationId="VerticalScrollBar"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Light.Background.FillColor.Default" Color="#FFF"/>
        <SolidColorBrush x:Key="Light.Background.FillColor.MicaBackground" Color="#F3F3F3"/>
        <LinearGradientBrush x:Key="Light.Elevation.AccentControl.Border">
            <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90"/>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="#14000000" Offset=".9067"/>
            <GradientStop Color="#66000000" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Light.Elevation.Control.Border">
            <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90"/>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="#0E000000" Offset=".9058"/>
            <GradientStop Color="#29000000" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Light.Elevation.TextControl.Border">
            <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90"/>
            </LinearGradientBrush.RelativeTransform>
            <GradientStop Color="#0E000000" Offset=".9999"/>
            <GradientStop Color="#71000000" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Light.FillColor.Accent.Default" Color="#005FB8"/>
        <SolidColorBrush x:Key="Light.FillColor.Accent.Disabled" Color="#000" Opacity=".2169"/>
        <SolidColorBrush x:Key="Light.FillColor.Accent.Secondary" Color="#005FB8" Opacity=".9"/>
        <SolidColorBrush x:Key="Light.FillColor.Accent.SelectedTextBackground" Color="#0078D4"/>
        <SolidColorBrush x:Key="Light.FillColor.Accent.Tertiary" Color="#005FB8" Opacity=".8"/>
        <SolidColorBrush x:Key="Light.FillColor.AccentText.Disabled" Color="#000" Opacity="0.3614"/>
        <SolidColorBrush x:Key="Light.FillColor.AccentText.Primary" Color="#003E92"/>
        <SolidColorBrush x:Key="Light.FillColor.AccentText.Secondary" Color="#001A68"/>
        <SolidColorBrush x:Key="Light.FillColor.AccentText.Tertiary" Color="#005FB8"/>
        <SolidColorBrush x:Key="Light.FillColor.Control.Default" Color="#FFF" Opacity=".7"/>
        <SolidColorBrush x:Key="Light.FillColor.Control.Disabled" Color="#F9F9F9" Opacity=".3"/>
        <SolidColorBrush x:Key="Light.FillColor.Control.InputActive" Color="#FFF"/>
        <SolidColorBrush x:Key="Light.FillColor.Control.Secondary" Color="#F9F9F9" Opacity=".5"/>
        <SolidColorBrush x:Key="Light.FillColor.Control.Tertiary" Color="#F9F9F9" Opacity=".3"/>
        <SolidColorBrush x:Key="Light.FillColor.ControlStrong.Default" Color="#000" Opacity=".4458"/>
        <SolidColorBrush x:Key="Light.FillColor.Subtle.Disabled" Color="#000" Opacity="0"/>
        <SolidColorBrush x:Key="Light.FillColor.Subtle.Secondary" Color="#000" Opacity=".0373"/>
        <SolidColorBrush x:Key="Light.FillColor.Subtle.Tertiary" Color="#000" Opacity=".0241"/>
        <SolidColorBrush x:Key="Light.FillColor.Subtle.Transparent" Color="#FFF" Opacity="0"/>
        <SolidColorBrush x:Key="Light.FillColor.Text.Disabled" Color="#000" Opacity=".3614"/>
        <SolidColorBrush x:Key="Light.FillColor.Text.Primary" Color="#000" Opacity=".9"/>
        <SolidColorBrush x:Key="Light.FillColor.Text.Secondary" Color="#000" Opacity=".4458"/>
        <SolidColorBrush x:Key="Light.FillColor.Text.Tertiary" Color="#000" Opacity=".6063"/>
        <SolidColorBrush x:Key="Light.FillColor.TextOnAccent.Disabled" Color="#FFF"/>
        <SolidColorBrush x:Key="Light.FillColor.TextOnAccent.Primary" Color="#FFF"/>
        <SolidColorBrush x:Key="Light.FillColor.TextOnAccent.Secondary" Color="#FFF" Opacity=".7"/>
        <SolidColorBrush x:Key="Light.FillColor.TextOnAccent.SelectedText" Color="#FFF" Opacity=".6063"/>
        <SolidColorBrush x:Key="Light.Shell.FillColor.CaptionControlCloseFill.Primary" Color="#C42B1C"/>
        <SolidColorBrush x:Key="Light.Shell.FillColor.CaptionControlCloseFill.Secondary" Color="#C42B1C" Opacity=".9"/>
        <SolidColorBrush x:Key="Light.Shell.FillColor.CaptionControlCloseText.Primary" Color="#FFF"/>
        <SolidColorBrush x:Key="Light.Shell.FillColor.CaptionControlCloseText.Secondary" Color="#FFF" Opacity=".7"/>
        <SolidColorBrush x:Key="Light.StrokeColor.ControlStroke.Default" Color="#000" Opacity=".0578"/>
        <SolidColorBrush x:Key="Light.StrokeColor.ControlStroke.Disabled" Color="#000" Opacity=".0578"/>
        <SolidColorBrush x:Key="Light.StrokeColor.ControlStroke.OnAccentDefault" Color="#FFF" Opacity=".08"/>
        <SolidColorBrush x:Key="Light.StrokeColor.DividerStroke.Default" Color="#000" Opacity=".0837"/>
        <SolidColorBrush x:Key="Light.StrokeColor.FocusStroke.Inner" Color="#FFF"/>
        <SolidColorBrush x:Key="Light.StrokeColor.FocusStroke.Outer" Color="#000" Opacity=".8956"/>
        <SolidColorBrush x:Key="Light.StrokeColor.SurfaceStroke" Color="#757575"/>

        <Style x:Key="ListView.ItemContainer.IconOnly" TargetType="{x:Type ListViewItem}">
            <Setter Property="ItemsControl.Background" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
            <Setter Property="ItemsControl.Width" Value="38"/>
            <Setter Property="ItemsControl.Height" Value="34"/>
            <Setter Property="ItemsControl.Margin" Value="0,3"/>
            <Setter Property="ItemsControl.Padding" Value="11,9"/>
            <Setter Property="ItemsControl.BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="{StaticResource Nunito}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ItemsControl.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid>
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Focusable="False" RecognizesAccessKey="True"/>
                            </Border>
                            <Border x:Name="Selector" Background="{DynamicResource Light.FillColor.Accent.Default}" Width="3" HorizontalAlignment="Left" Margin="1,9,0,9" Visibility="Collapsed" CornerRadius="1.5"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Transparent}"/>
                                <Setter Property="Visibility" TargetName="Selector" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Secondary}"/>
                                <Setter Property="Visibility" TargetName="Selector" Value="Visible"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Secondary}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Disabled}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Selector" Value="{DynamicResource Light.FillColor.Accent.Default}"/>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Tertiary}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Selector" Value="{DynamicResource Light.FillColor.Accent.Disabled}"/>
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Light.FillColor.Subtle.Disabled}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListView" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ListView.ItemContainer}"/>
            <Setter Property="ItemsControl.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ScrollViewer Style="{DynamicResource ScrollViewer}">
                            <ItemsPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Focusable="False"/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListView.Body" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource Light.FillColor.Text.Primary}"/>
            <Setter Property="Margin" Value="0,0,0,3"/>
            <Setter Property="FontFamily" Value="{StaticResource Nunito}"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
        <Style x:Key="ListView.Caption" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{DynamicResource Light.FillColor.Text.Secondary}"/>
            <Setter Property="MaxWidth" Value="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Setter Property="FontFamily" Value="{StaticResource Nunito}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </Application.Resources>
</Application>
